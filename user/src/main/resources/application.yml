# 指定运行端口
server:
  port: 8012
  # shutdown: graceful
  timeout-per-shutdown-phase: 20

public_key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANzHZRwpMLSbFand6Q7FB394+zEOkPac1ZXPfHA1GfDSShzx2MmhMmoCaw0LGJe0YDjin1GTd0mugLtzAQfIcwMCAwEAAQ==

# 指定服务名称
spring:
  application:
    name: user-service
# 数据库访问配置, 使用druid数据源(默认数据源是HikariDataSource)
  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    privateKey:MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEA3MdlHCkwtJsVqd3pDsUHf3j7MQ6Q9pzVlc98cDUZ8NJKHPHYyaEyagJrDQsYl7RgOOKfUZN3Sa6Au3MBB8hzAwIDAQABAkEAugKE/aT2lDPVnLiKkxcNqiiT+lD7ccvRZ9bYUPFsWahCMJAZwLVzw7llL86NqTg8t8z2BEKFiKE5Z9Vppa4ygQIhAPglq4TQeNIARRKjPhxRyGY0tUJUffqzBgJaUDHG39sXAiEA48QBN6HZk0JJzbnAPOxbhJZFCYdkhMVccsPgfAt2KvUCIQCicF5gGewNZFnTAoOFHFA3/6bsHc0+EHUNkztN6mbdzwIgaNsEYHMvcj7TMVWxbZq2ayyu7bsaCJG/hMouX4z7Qr0CIQCcsWXhPA7f3UU8uXP926L7v5nERS7eX/h6NRvXgiKLDA==
#    publicKey:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANzHZRwpMLSbFand6Q7FB394+zEOkPac1ZXPfHA1GfDSShzx2MmhMmoCaw0LGJe0YDjin1GTd0mugLtzAQfIcwMCAwEAAQ==
#    password:RRseuhKOpnojXqdJnjSc3joidSe82Ytx5GLl0NiiuNRD16VRx5QtY+YU2yPG+DOk7lMj5XXD+JGcG3jjQJgNhg==
    druid:
      username: root
      url: jdbc:mysql://127.0.0.1:3306/emp
      driver-class-name: com.mysql.cj.jdbc.Driver # com.mysql.cj.jdbc.Driver com.mysql.jdbc.Driver
      password: RRseuhKOpnojXqdJnjSc3joidSe82Ytx5GLl0NiiuNRD16VRx5QtY+YU2yPG+DOk7lMj5XXD+JGcG3jjQJgNhg== # root
      connection-properties: config.decrypt=true;config.decrypt.key=${public_key} #启用加密，配置公钥
      filter:
        config:
          enabled: true #开启configFilter
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
      #自动往数据库建表
      #    schema:
      #      - classpath:department.sql
      # 连接池配置：初始大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 连接等待超时时间
      maxWait: 60000
      # 配置检测可以关闭的空闲连接，间隔时间
      timeBetweenEvictionRunsMillis: 60000
      # 配置连接在池中的最小生存时间
      minEvictableIdleTimeMillis: 300000
      # 检测连接是否有效，有效的select语句
      validationQuery: SELECT 1 FROM DUAL
      # 申请连接的时候检测，如果空闲时间大于time-between-eviction-runs-millis，执行validationQuery检测连接是否有效，建议配置为true，不影响性能，并且保证安全性。
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，建议设置为false，不然会会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，建议设置为false，不然会会降低性能
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      poolPreparedStatements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      maxPoolPreparedStatementPerConnectionSize: 20
      max-open-prepared-statements: 20
      maxOpenPreparedStatements: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      syncInit: true
# redis 配置
  cache:
    type: redis
  redis:
    host: 127.0.0.1
    port: 6379
    database: 5
    password: #123456
    # 连接超时时间 单位 ms（毫秒）
    timeout: 3000
    #=========redis线程池设置=========
    # 连接池中的最大空闲连接，默认值也是8。
    pool:
      max-idle: 10
      #连接池中的最小空闲连接，默认值也是0。
      min-idle: 5
      # 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
      max-active: 1000
      # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
      max-wait: 1000

cache:
  userId:
    expire: 86400000

## MyBatis配置
#mybatis:
#  # 配置别名
#  # type-aliases-package: cn.sf.user.model
#  # 配置XML扫描地址
#  mapper-locations:
#    - classpath*:mapper/*.xml
#  # 配置启用驼峰命名方式
#  configuration:
#    map-underscore-to-camel-case: true

# MybatisPlus 配置
mybatis-plus:
  mapper-locations: classpath*:mapper/*Mapper.xml

# 设置日志显示：在控制台打印SQL
logging:
  pattern:
    console: "[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5level] [%t] [%X{RequestId}] [%X{TID}] [%c(%L)] %m%n"
  level:
    # 以包名前置，表示指定包下的操作指定日志级别。
    cn.sf.user.mapper: ERROR
    cn.sf.user.service: INFO
    cn.sf.user.controller: INFO
  file:
    path: /data/logs/user/
  config: F:\github\springcloudaction\user\src\main\resources\log4j2-spring.xml

# actuator配置
management:
  server:
    port: 18012
  #    servlet:
  #      context-path: /
  #    ssl:
  #      enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true # 启用shutdown端点优雅关机 POST http://localhost:18012/actuator/shutdown

# eureka配置
eureka:
  instance:
    preferIpAddress: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    # 发送心跳给 eureka server 端的频率，默认 30 秒
    lease-renewal-interval-in-seconds: 30
    # Eureka Server 至上一次收到 client 的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该 Instance，默认 90 秒
    lease-expiration-duration-in-seconds: 60
    metadata-map:
      service-name: user
  client:
    # 开启健康检查
    healthcheck:
      enabled: true
    # 注册到Eureka的注册中心
    register-with-eureka: true
    # 获取注册实例列表
    fetch-registry: true
    service-url:
      # 配置注册中心地址
      defaultZone: http://root:root@standalone:8000/eureka/


